name : CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test: 
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install MySQL
        run: sudo apt-get update && sudo apt-get install -y mysql-server

      - name: Start MySQL
        run: sudo service mysql start
  
             
      - name: Install backend
        working-directory: ./backend
        run: npm install

      - name: run start
        working-directory: ./backend
        run: npm run start
        continue-on-error: true

      - name: test backend
        working-directory: ./backend
        run: npm run test
        continue-on-error: true

      - name: Install frontend
        working-directory: ./frontend
        run: npm install

      - name: start server
        working-directory: ./frontend
        run: ng serve
        continue-on-error: true

      - name: Test frontend
        working-directory: ./frontend
        run: npm run test -- --watch=false --browsers=ChromeHeadless
        continue-on-error: true

  build-and-push:
    name: Build & Push Images
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push backend
        run: |
          docker build -t 1tanguy/projet-devops:backend-${{ steps.vars.outputs.sha_short }} ./backend
          docker push 1tanguy/projet-devops:backend-${{ steps.vars.outputs.sha_short }}

      - name: Build and push frontend
        run: |
          docker build -t 1tanguy/projet-devops:frontend-${{ steps.vars.outputs.sha_short }} ./frontend
          docker push 1tanguy/projet-devops:frontend-${{ steps.vars.outputs.sha_short }}


  deploy:
    name: Deploy to AKS
    if: github.ref == 'refs/heads/main'
    needs: [ test, build-and-push ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config
        
      - name: Update backend image
        run: |
          sed -i 's|image: 1tanguy/projet-devops:backend-.*|image: 1tanguy/projet-devops:backend-${{ needs.build-and-push.outputs.sha_short }}|' k8s/backend-deployment.yaml
        
      - name: Update frontend image  
        run: |
          sed -i 's|image: 1tanguy/projet-devops:frontend-.*|image: 1tanguy/projet-devops:frontend-${{ needs.build-and-push.outputs.sha_short }}|' k8s/frontend-deployment.yaml

      - name: Deploy backend
        run: kubectl apply -f k8s/backend-deployment.yaml
        
      - name: Deploy frontend
        run: kubectl apply -f k8s/frontend-deployment.yaml

      - name: Check deployment status
        run: |
          kubectl get pods -n projet-eni
          kubectl rollout status deployment/backend -n projet-eni --timeout=120s
          kubectl rollout status deployment/frontend -n projet-eni --timeout=120s